// Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*'.
#include<bits/stdc++.h>
using namespace std;

 bool isMatch(string s, string p) {
      int n= s.size();
      int m= p.size();
        bool dp[m+1][n+1];
        memset(dp, false, sizeof(dp));
        dp[0][0]=true;
        for(int i=1;i<=m;i++){
            if(p[i-1]=='*'){
                dp[i][0]=true;
            }
            else{
                break;
            }
        }
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++)
            {
                if(s[j-1]==p[i-1]||p[i-1]=='?'){
                    dp[i][j]=dp[i-1][j-1];
                }
                else if(p[i-1]=='*')
                {
                    dp[i][j]=dp[i-1][j]||dp[i][j-1];
                }
            }
        }
        return dp[m][n];
    }
int main(){
string a, b;
cin>>a>>b;
cout<<isMatch(a, b);
return 0;
}

